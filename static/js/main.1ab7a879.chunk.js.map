{"version":3,"sources":["api/api.js","components/PostsList/PostsList.jsx","api/posts.js","api/comments.js","components/NewCommentForm/NewCommentForm.jsx","components/PostDetails/PostDetails.jsx","App.jsx","index.js"],"names":["BASE_URL","PostsList","select","setSelectedPostId","selectedPostId","useState","posts","setPosts","useEffect","fetch","then","response","json","data","result","className","filter","post","userId","map","key","id","title","type","onClick","defaultProps","remove","url","options","ok","Error","request","method","NewCommentForm","postId","name","getName","email","getEmail","body","getBody","changeHandler","state","event","target","value","submitHandler","preventDefault","headers","JSON","stringify","createComment","onSubmit","placeholder","onChange","PostDetails","setPost","comments","setComments","isVisible","setIsVisible","comment","current","length","commentId","App","setSelect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ab7a879.chunk.js","sourcesContent":["export const BASE_URL = 'https://mate-api.herokuapp.com';\n","import React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PostsList.scss';\nimport { getUserPosts } from '../../api/posts';\n\nexport const PostsList = ({\n  select,\n  setSelectedPostId,\n  selectedPostId,\n}) => {\n  const [posts, setPosts] = useState(null);\n\n  useEffect(() => {\n    getUserPosts()\n      .then(result => setPosts(result));\n  }, []);\n\n  return (\n    <div className=\"PostsList\">\n      <h2>Posts:</h2>\n\n      <ul className=\"PostsList__list\">\n        {posts && posts.filter(post => (\n          select === '0' ? post : +post.userId === +select\n        )).map(post => (\n          <li key={post.id} className=\"PostsList__item\">\n            <div>\n              <b>{`[User: #${post.userId}] `}</b>\n              {post.title}\n            </div>\n            {selectedPostId === post.id ? (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(0)}\n              >\n                Close\n              </button>\n            ) : (\n              <button\n                type=\"button\"\n                className=\"PostsList__button button\"\n                onClick={() => setSelectedPostId(post.id)}\n              >\n                Open\n              </button>\n            )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nPostsList.propTypes = {\n  select: PropTypes.string.isRequired,\n  setSelectedPostId: PropTypes.func.isRequired,\n  selectedPostId: PropTypes.number,\n};\n\nPostsList.defaultProps = {\n  selectedPostId: '',\n};\n","import { BASE_URL } from './api';\n\nexport const getUserPosts = () => (\n  fetch(`${BASE_URL}/posts/`)\n    .then(response => response.json())\n    .then(response => response.data)\n);\n\nexport const getPostDetails = url => (\n  fetch(`${BASE_URL}/posts/${url}`)\n    .then(response => response.json())\n    .then(response => response.data)\n);\n","import { BASE_URL } from './api';\n\nexport const request = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your comment`);\n      }\n\n      return response.json();\n    })\n    .then(response => response.data)\n);\n\nexport const getPostComments = (url, options) => (\n  fetch(`${BASE_URL}${url}`, options)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`can\\n't upload your comment`);\n      }\n\n      return response.json();\n    })\n    .then(response => response.data)\n);\n\nexport const createComment = (name, postId, email, body) => (\n  fetch(`${BASE_URL}/comments`, {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json; charset=UTF-8',\n    },\n    body: JSON.stringify({\n      name,\n      postId,\n      email,\n      body,\n    }),\n  })\n    .then(response => response.json())\n    .then(response => response.data)\n);\n\nexport const remove = url => (\n  request(url, { method: 'DELETE' })\n);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { createComment } from '../../api/comments';\nimport './NewCommentForm.scss';\n\nexport const NewCommentForm = ({ postId }) => {\n  const [name, getName] = useState('');\n  const [email, getEmail] = useState('');\n  const [body, getBody] = useState('');\n\n  const changeHandler = (state, event) => state(event.target.value);\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    createComment(name, postId, email, body);\n    getName('');\n    getEmail('');\n    getBody('');\n  };\n\n  return (\n    <form\n      className=\"NewCommentForm\"\n      onSubmit={event => submitHandler(event)}\n    >\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Your name\"\n          className=\"NewCommentForm__input\"\n          value={name}\n          onChange={event => changeHandler(getName, event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <input\n          type=\"text\"\n          name=\"email\"\n          placeholder=\"Your email\"\n          className=\"NewCommentForm__input\"\n          value={email}\n          onChange={event => changeHandler(getEmail, event)}\n        />\n      </div>\n\n      <div className=\"form-field\">\n        <textarea\n          name=\"body\"\n          placeholder=\"Type comment here\"\n          className=\"NewCommentForm__input\"\n          value={body}\n          onChange={event => changeHandler(getBody, event)}\n        />\n      </div>\n\n      <button\n        type=\"submit\"\n        className=\"NewCommentForm__submit-button button\"\n      >\n        Add a comment\n      </button>\n    </form>\n  );\n};\n\nNewCommentForm.propTypes = {\n  postId: PropTypes.number,\n};\n\nNewCommentForm.defaultProps = {\n  postId: 0,\n};\n","import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { getPostComments, remove } from '../../api/comments';\nimport { getPostDetails } from '../../api/posts';\nimport { NewCommentForm } from '../NewCommentForm';\nimport './PostDetails.scss';\n\nexport const PostDetails = ({ selectedPostId }) => {\n  const [post, setPost] = useState({});\n  const [comments, setComments] = useState([]);\n  const [isVisible, setIsVisible] = useState(false);\n\n  const deleteComment = commentId => (\n    remove(`/comments/${commentId}`)\n  );\n\n  useEffect(() => {\n    getPostDetails(selectedPostId)\n      .then(response => (\n        setPost(response)\n      ));\n  }, [selectedPostId]);\n\n  useEffect(() => {\n    getPostComments('/comments')\n      .then(response => (response))\n      .then(response => setComments(response.filter(comment => (\n        comment.postId === post.id\n      ))));\n  }, [comments]);\n\n  const showHandler = () => {\n    setIsVisible(current => !current);\n  };\n\n  // console.log(comments);\n\n  return (\n    <div className=\"PostDetails\">\n      <h2>Post details:</h2>\n      <section className=\"PostDetails__post\">\n        <p>{post.title}</p>\n      </section>\n\n      <section className=\"PostDetails__comments\">\n        <button\n          type=\"button\"\n          className=\"button\"\n          onClick={showHandler}\n        >\n          {!isVisible\n            ? `Show ${comments.length} comments`\n            : `Hide ${comments.length} comments`\n\n          }\n        </button>\n\n        {isVisible && (\n          <ul className=\"PostDetails__list\">\n            {comments.map(comment => (\n              <li key={comment.id} className=\"PostDetails__list-item\">\n                <button\n                  type=\"button\"\n                  className=\"PostDetails__remove-button button\"\n                  onClick={() => deleteComment(comment.id)}\n                >\n                  X\n                </button>\n                <p>{comment.body}</p>\n              </li>\n            ))}\n          </ul>\n        )}\n      </section>\n      <section>\n        <div className=\"PostDetails__form-wrapper\">\n          <NewCommentForm postId={post.id} />\n        </div>\n      </section>\n    </div>\n  );\n};\n\nPostDetails.propTypes = {\n  selectedPostId: PropTypes.number,\n};\n\nPostDetails.defaultProps = {\n  selectedPostId: 0,\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { PostsList } from './components/PostsList';\nimport { PostDetails } from './components/PostDetails';\n\nconst App = () => {\n  const [select, setSelect] = useState('0');\n  const [selectedPostId, setSelectedPostId] = useState(0);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App__header\">\n        <label>\n          Select a user: &nbsp;\n\n          <select\n            className=\"App__user-selector\"\n            name=\"selectValue\"\n            value={select}\n            onChange={event => setSelect(event.target.value)}\n          >\n            <option value=\"0\">All users</option>\n            <option value=\"1\">Leanne Graham</option>\n            <option value=\"2\">Ervin Howell</option>\n            <option value=\"3\">Clementine Bauch</option>\n            <option value=\"4\">Patricia Lebsack</option>\n            <option value=\"5\">Chelsey Dietrich</option>\n            <option value=\"6\">Mrs. Dennis Schulist</option>\n            <option value=\"7\">Kurtis Weissnat</option>\n            <option value=\"8\">Nicholas Runolfsdottir V</option>\n            <option value=\"9\">Glenna Reichert</option>\n            <option value=\"10\">Leanne Graham</option>\n          </select>\n        </label>\n      </header>\n\n      <main className=\"App__main\">\n        <div className=\"App__sidebar\">\n          <PostsList\n            select={select}\n            setSelectedPostId={setSelectedPostId}\n            selectedPostId={selectedPostId}\n          />\n        </div>\n\n        <div className=\"App__content\">\n          {selectedPostId ? (\n            <PostDetails\n              selectedPostId={selectedPostId}\n            />\n          ) : ''}\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}